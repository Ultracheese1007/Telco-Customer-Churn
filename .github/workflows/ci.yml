name: üöÄ CI Pipeline - Telco Churn

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: üß± Build & Test Docker Images
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Docker Buildx (for multi-architecture builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Build the FastAPI image
      - name: Build FastAPI image
        run: |
          docker build -f docker/Dockerfile.api -t telco-api:ci .

      # 4Ô∏è‚É£ Build the Streamlit image
      - name: Build Streamlit image
        run: |
          docker build -f docker/Dockerfile.app -t telco-app:ci .

      # 5Ô∏è‚É£ Inject temporary environment variables for CI
      - name: Create environment files for CI
        run: |
          mkdir -p docker/env
          echo "MODEL_PATH=models/best_xgb.pkl" > docker/env/api.env
          echo "API_URL=http://telco-api:8000/api/predict" > docker/env/app.env
          echo "APP_PORT=8501" >> docker/env/app.env

      # 6Ô∏è‚É£ Start both containers using Docker Compose
      - name: Run Docker Compose for test
        run: |
          docker compose -f docker/docker-compose.yml up -d
          sleep 10  # Wait for containers to start
          docker ps
git add .github/workflows/ci.yml

      # 7Ô∏è‚É£ Health checks (ensure both services are running)
      - name: Test FastAPI health endpoint
        run: |
          curl -f http://localhost:8000/api/health || exit 1


      - name: Test Streamlit app port
        run: |
          curl -f http://localhost:8501 || exit 1

      # 8Ô∏è‚É£ Cleanup (stop and remove all containers)
      - name: Stop and remove containers
        if: always()
        run: docker compose -f docker/docker-compose.yml down
